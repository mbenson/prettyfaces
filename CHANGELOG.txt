------------------------------------
           VERSION 4.0.0
------------------------------------
Regression Impact:
* ViewID must now be strictly defined using the "value" attribute. E.g.: <view-id value="/view.id" />
 -- This can be done using the following regular expression replacement:
 Search: <view-id>\s*([^<]+?)\s*</view-id>
 Replace: <view-id value="$1" />
 

------------------------------------
           VERSION 3.3.1
------------------------------------

Features & Enhancements:
* Support of query parameter and action inheritance (#75)

Bugfixes:
* Implemented equals()/hashcode() for LazyExpression (#115)
* Performance: URLPatternParser got created on every call to UrlMapping.getPatternParser()
* Fixed incorrect handling of Spring AOP proxies during bean name lookup - thanks to mbenson for the patch #(119)
* Dynaview: Parameter injection now correctly happens before view determination (#120)


------------------------------------
           VERSION 3.3.0
------------------------------------

Features & Enhancements:
* Performance improvements when running JSF 2.0 in project stage 'development'
* Regular expression performance improvements provided by Yann Simon.
* Ambiguous View IDs are now resolved automatically when using pretty:mappingIds in action method navigation, <h:link> and <h:button> component outcomes
* Ambiguous View IDs may now be resolved manually for outbound URL rewrites by adding '?com.ocpsoft.mappingId=...' to URLs before calling HttpServletResponse.encodeURL(...)
* Dynaview URLs are now resolved during rendering of links and navigation cases, and are now as functional as traditional mappings.

Bugfixes:
* Fixed bug that caused path parameter validators to be ignored (#102)
* Handle java.lang.ClassFormatError during initialization of bean name resolvers (#101)
* Also check Weld 1.1.x specific servlet context attribute while search for BeanManager
* Mapping inheritance now working correctly for mappings using the same viewId


------------------------------------
           VERSION 3.2.1
------------------------------------

Features & Enhancements:
* Use JSF converters for path and query parameter conversion.
* Now bundles shaded apache commons libs, and requires no dependencies.

Bugfixes:
* Fixed incorrect encoding of URLs when using the 'url' attribute for rewrite rules (#91)
* MultiPageMessagesSupport doesn't duplicate messages any more if using MyFaces (#89)
* Fixed potential NullPointerExceptions on FacesContext access
* Ignore query parameters that are not correctly encoded (#88)
* Fixed BeanManager JNDI lookup for Weld 1.1.0 + Tomcat enviroments
* Correctly handle $ characters as path parameters


------------------------------------
           VERSION 3.2.0
------------------------------------

Major Changes:
* PrettyFaces is now licensed under the Apache Software License v2.0 (http://www.apache.org/licenses/LICENSE-2.0.html)
* Added 'parentId' for Hierarchical Mappings in pretty-config.xml (#72)
* Can now be run in a pure servlet environment (without JSF and related JARs)

Features & Enhancements:
* Added 'onPostback' configuration parameter for query parameters (#24)
* Added code-completion support for Eclipse Helios
* Added 'pretty:location' client behavior 
* Added 'onPostback' configuration parameter for path parameters (#24)
* New method PrettyContext.sendError() to send custom HTTP status codes (#66)
* Added SPI hooks for ConfigurationProvider and ConfigurationPostProcessor
* New @URLMappings annotation to declare multiple mappings on a single class

Regression Impact:
* Changed some method signatures in PrettyContext
* PrettyFilter no longer wraps application exceptions in ServletException
* PrettyException no longer extends javax.faces.FacesException
* Began deprecation of <view-id>/view.jsp</view-id> in favor of <view-id value="/view.jsp" />
* com.ocpsoft.pretty.faces.el.BeanNameResolver SPI has moved to com.ocpsoft.pretty.faces.spi.ELBeanNameResolver
* URL-mapping order is now properly respected in pretty-config.xml (and other config sources.)
* Began deprecation of PrettyURLBuilder methods without the new 'encodeUrl' argument.

Bugfixes:
* Fixed compatibility with Java 1.5
* Fixed handling of non-ASCII characters in URLs
* Fixed EL method invocation in JSF 1.1 branch.
* Removed HttpSession accesses that could potentially create an unwanted user session. (#62)
* Prevent downloading of web.xml DTDs during configuration
* Fixed FacesConfigBeanNameResolver regarding space characters in URLs 
* PrettyFacesWrappedResponse no longer depends on FacesContext (#78)
* PrettyFaces no longer injects values into EL if the response has been marked complete (#79)
* Added documentation specifying the need to "double-escape" backslashes in custom regexes (#83)
* Fixed annotation scanning if application is run with jetty-maven-plugin


------------------------------------
           VERSION 3.1.0
------------------------------------

Features & Enhancements:

* Introducing: URL mapping configuration with annotations (http://ocpsoft.com/prettyfaces/annotations-support-is-coming-to-prettyfaces-url-rewriting/ + http://ocpsoft.com/docs/prettyfaces/snapshot/en-US/html/Configuration.html#config.annotations)
* Added path and query-parameter validation wth managed bean methods (#50 + r353)
* Added support for JSF2 redirects using ExternalContext (r305)
* Added support for arrays as query parameters (r278)

Regression impact:

* The URL query string is now included in rewrite-rules; this allows for finer control of the rewriting engine (Any prior rewrite rules should be revised and re-tested)

Bugfixes:

* Resolved Mojarra warning "Request path '/faces/url.xhtml' begins with one or more occurrences of the FacesServlet prefix path mapping '/faces'." when using path mapping (#43 + r379)
* Resolved Deployment warning on Geronimo (#58 + r364)
* URL Path Expressions now match correctly when more than one expression is used between path segments (r362)
* Resolved ClassNotFoundException with JSF 1.2 on JBoss6 (#54 + r360)
* Resolved failed deployment due to ClassNotFoundException on Geronimo (#59 + r369)
